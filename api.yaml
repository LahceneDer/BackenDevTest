swagger: "2.0"
info:
  title: BackendDev swagger UI Docs
  description: BackendDev documentation made by Lahcene DERGHAM .
  version: "1.0"
  contact:
    email: l.dergham@esi-sba.dz
host: localhost:4000

schemes: [http]

paths:
  /api/products:
    get:
      summary: return products
      description: It is just returning a list of products
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: integer
                name:
                  type: string
                category_id:
                  type: integer

        400:
          description: User Error
        500:
          description: Internal Server Error
    post:
      summary: used to insert data  to mongodb
      description: It is just adding a new product
      consumes:
        - application/json
      parameters:
        - in: body
          name: product
          description: The product to create.
          schema:
            type: object
            required:
              - name
              - category_id
            properties:
              name:
                type: string
              category_id:
                type: string
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                parent_id:
                  type: string

        400:
          description: User Error
        500:
          description: Internal Server Error

  /api/products/{categoryId}:
    get:
      summary: Returns products bycategory ID.
      description: Returns a list of products by category ID
      parameters:
        - name: categoryId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: integer
                name:
                  type: string
                category_id:
                  type: integer
            example:
              [
                {
                  _id: 234557f6edf13ab14ad15bb3,
                  name: product1,
                  category_id: 631257f63bb13ab14ad15bb3,
                },
                {
                  _id: 175557f6edf13ab14ad15qs2,
                  name: product3,
                  category_id: 234557f6edf13ab14ad15bb3,
                },
              ]
  #Get Request with path id
  /api/products/{Id}:
    get:
      summary: Returns a product by ID.
      description: Returns the Specific product
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            example:
              { _id: 0, name: product1, category_id: 631257f63bb13ab14ad15bb3 }
    delete:
      summary: Delete a product by ID.
      description: Delete the Specific product
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: product is deleted

  # For Categories
  /api/categories:
    get:
      summary: return categories
      description: It is just returning a list of categories
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                parent_id:
                  type: string

        400:
          description: User Error
        500:
          description: Internal Server Error
    post:
      summary: used to insert data  to mongodb
      description: It is just adding a new category
      consumes:
        - application/json
      parameters:
        - in: body
          name: product
          description: The category to create.
          schema:
            type: object
            required:
              - name
              - category_id
            properties:
              name:
                type: string
              parent_id:
                type: string
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                parent_id:
                  type: string

        400:
          description: User Error
        500:
          description: Internal Server Error

  #Get Request with path id
  /api/categories/{Id}:
    get:
      summary: Returns a category by ID.
      description: Returns the Specific category
      parameters:
        - name: categoryId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            example:
              {
                _id: 564257f63bb13ab1dfgh5xsd,
                name: cat1,
                category_id: 631257f63bb13ab1dfgh5era,
              }
    delete:
      summary: Delete a category by ID.
      description: Delete the Specific category
      parameters:
        - name: categoryId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: category is deleted
